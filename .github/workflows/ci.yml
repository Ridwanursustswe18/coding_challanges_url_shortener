name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger this workflow on push to the 'main' 
  pull_request:

jobs:
  backend:
    name: Backend CI/CD
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use Node.js version 18 (ensure it aligns with your local environment)

      # Install new Railway CLI from @railway/cli
      - name: Install Railway CLI
        run: npm install -g @railway/cli

      # Install backend dependencies
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      # Deploy backend to Railway
      - name: Deploy backend to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.BACKEND_TOKEN }}  # Store Railway token in GitHub secrets
        run: |
          railway up --service url-shortener-backend

  frontend:
    name: Frontend CI/CD
    runs-on: ubuntu-latest
    needs: backend  # Ensure backend builds and deploys before the frontend starts

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Ensure Node.js version aligns with frontend requirements

      # Install frontend dependencies
      - name: Install frontend dependencies
        working-directory: ./frontend/url-shortener-client-side
        run: npm install

      # Build frontend
      - name: Build frontend
        working-directory: ./frontend/url-shortener-client-side
        run: npm run build

      # Deploy frontend to Vercel
      - name: Deploy frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.URL_SHORTENER_FRONTEND_TOKEN }}  # Store Vercel token in GitHub secrets
        run: |
          vercel --prod --token $VERCEL_TOKEN
